{"pageProps":{"docs":[{"slug":"Alert","title":"Alert","section":"components"},{"slug":"Button","title":"Button","section":"components"},{"slug":"Card","title":"Card","section":"components"},{"slug":"Colors","title":"Colors","section":"tokens"},{"slug":"Home","title":"Home","section":"home"},{"slug":"Icon","title":"Icon","section":"components"},{"slug":"Tag","title":"Tag","section":"components"},{"slug":"Text","title":"Text","section":"components"}],"doc":{"filepath":"./src/docs/Button.mdx","slug":"Button","content":"\nimport Demo from '@/utils/components/Demo'\nimport Button from '@/components/Button'\n\n# Button\n\n---\n\n- [Props](#Props)\n- [Examples](#Examples)\n  - [Theme](#Theme)\n  - [Size](#Size)\n  - [Block](#Block)\n  - [Icon](#Icon)\n  - [Loading](#Loading)\n  - [Disabled](#Disabled)\n  - [Round](#Round)\n  - [Click](#Click)\n  - [Href](#Href)\n\nA flexible component button, with six pre-stablished themes.\nThe button can behave like any button with onClick event, or like an anchor with href and target.\n\n## Props\n\n| Name        | Type          | Default value | Description                                                                                                                                        |\n| ----------- | ------------- | ------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `children`  | **ReactNode** | -             | Children component passed to this container.                                                                                                       |\n| `theme`     | **string**    | `primary`     | Button's predefined styles. Available options are: `primary`, `secondary`, `tertiary`, `tertiaryWhite`, `ghostPink`, `ghostGrey` and `ghostWhite`. |\n| `size`      | **string**    | `md`          | Button size. Available options are: `sm`, `md` and `lg`.                                                                                           |\n| `block`     | **boolean**   | `false`       | If true, the button will be displayed in a block.                                                                                                  |\n| `disabled`  | **boolean**   | `false`       | It disables the button functionality and shows it with a different style.                                                                          |\n| `icon`      | **string**    | -             | Displays an icon on the left side of the button.                                                                                                   |\n| `iconRight` | **string**    | -             | Displays as icon on the right side of the button.                                                                                                  |\n| `round`     | **boolean**   | -             | Property to make the button round when it only has an `iconLeft` and no `children`.                                                                |\n| `loading`   | **boolean**   | `false`       | The loading state disables the button and displays a spinner inside.                                                                               |\n| `onClick`   | **function**  | -             | Callback function that is called when the button is clicked.                                                                                       |\n| `type`      | **string**    | -             | Button's type to use in HTML Forms. Available options are: `button`, `submit`, `reset`.                                                            |\n| `name`      | **string**    | -             | The name of the button, used in HTML forms.                                                                                                        |\n| `value`     | **any**       | -             | The value of the button, used in HTML forms.                                                                                                       |\n| `href`      | **string**    | -             | The link that the button will navigate to.                                                                                                         |\n| `target`    | **string**    | -             | The link target.                                                                                                                                   |\n| `rel`       | **string**    | -             | Only used if the `href` attribute is present.                                                                                                      |\n| `id`        | **string**    | -             | The id of the button.                                                                                                                              |\n| `testId`    | **string**    | -             | The data-testid of the button.                                                                                                                     |\n| `className` | **string**    | -             | The className of the button.                                                                                                                       |\n| `style`     | **object**    | -             | The style of the button.                                                                                                                           |\n\n## Examples\n\n### Theme\n\nYou can choose any of the 7 predefined themes:\n\n<Demo title=\"Button themes\" background={colors.grey400}>\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button style={{ margin: spacing.tiny }}>Primary</Button>\n    <Button theme=\"secondary\" style={{ margin: spacing.tiny }}>\n      Secondary\n    </Button>\n    <Button theme=\"tertiary\" style={{ margin: spacing.tiny }}>\n      Tertiary\n    </Button>\n    <Button theme=\"tertiaryWhite\" style={{ margin: spacing.tiny }}>\n      Tertiary White\n    </Button>\n    <Button theme=\"ghostPink\" style={{ margin: spacing.tiny }}>\n      Ghost Pink\n    </Button>\n    <Button theme=\"ghostGrey\" style={{ margin: spacing.tiny }}>\n      Ghost Grey\n    </Button>\n    <Button theme=\"ghostWhite\" style={{ margin: spacing.tiny }}>\n      Ghost White\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use Button themes\nfunction Component() {\n  return (\n    <>\n      {/* `primary` is the default value. */}\n      <Button>Primary</Button>\n      <Button theme=\"secondary\">Secondary</Button>\n      <Button theme=\"tertiary\">Tertiary</Button>\n      <Button theme=\"tertiaryWhite\">Tertiary White</Button>\n      <Button theme=\"ghostPink\">Ghost Pink</Button>\n      <Button theme=\"ghostGrey\">Ghost Grey</Button>\n      <Button theme=\"ghostWhite\">Ghost White</Button>\n    </>\n  )\n}\n```\n\n### Size\n\nThere's 3 available sizes for Buttons:\n\n<Demo title=\"Button sizes\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button size=\"sm\" style={{ margin: spacing.tiny }}>\n      Small\n    </Button>\n    <Button size=\"md\" style={{ margin: spacing.tiny }}>\n      Medium\n    </Button>\n    <Button size=\"lg\" style={{ margin: spacing.tiny }}>\n      Large\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use Button sizes\nfunction Component() {\n  return (\n    <>\n      {/* `sm` is the default value. */}\n      <Button>Small</Button>\n      <Button size=\"md\">Medium</Button>\n      <Button size=\"lg\">Large</Button>\n    </>\n  )\n}\n```\n\n### Block\n\n<Demo title=\"Button block\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button size=\"md\" block>\n      Block\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use block\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" block>\n        Block\n      </Button>\n    </>\n  )\n}\n```\n\n### Icon\n\n<Demo title=\"Button with icon\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button iconLeft=\"search\" style={{ margin: spacing.tiny }}>\n      Icon at left side\n    </Button>\n    <Button iconRight=\"book\" style={{ margin: spacing.tiny }}>\n      Icon at right side\n    </Button>\n    <Button iconLeft=\"search\" iconRight=\"book\">\n      Icon at both sides\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to set an icon\nfunction Component() {\n  return (\n    <>\n      <Button iconLeft=\"search\">Icon at left side</Button>\n      <Button iconRight=\"book\">Icon at right side</Button>\n      <Button iconLeft=\"search\" iconRight=\"book\">\n        Icon at both sides\n      </Button>\n    </>\n  )\n}\n```\n\n### Loading\n\n<Demo title=\"Button loading\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button size=\"md\" loading>\n      Loading\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use loading\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" loading>\n        Loading\n      </Button>\n    </>\n  )\n}\n```\n\n### Disabled\n\n<Demo title=\"Button disabled\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button size=\"md\" disabled>\n      Disabled\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use disabled\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" disabled>\n        Disabled\n      </Button>\n    </>\n  )\n}\n```\n\n### Round\n\n<Demo title=\"Button round\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button size=\"md\" round iconLeft=\"search\" round />\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use round\nfunction Component() {\n  return (\n    <>\n      {/* The button can be round only when it has no child and has an iconLeft, round properties. */}\n      <Button size=\"md\" round iconLeft=\"search\" round />\n    </>\n  )\n}\n```\n\n### Click\n\n<Demo title=\"Button onClick\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button size=\"md\" onClick={() => alert('Button clicked!')}>\n      Button\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use onClick\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" onClick={() => alert('Button clicked!')}>\n        Button\n      </Button>\n    </>\n  )\n}\n```\n\n### Href\n\nThe button can recive the href, target, and rel properties of an anchor, to render a link with the styling of a button.\n\n<Demo title=\"Button href\">\n  <Flexbox\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    wrap=\"wrap\"\n  >\n    <Button\n      size=\"md\"\n      href=\"https://www.google.com\"\n      target=\"_blank\"\n      rel=\"nofollow\"\n    >\n      Button href\n    </Button>\n  </Flexbox>\n</Demo>\n\n```jsx\n// How to use href, rel and target\nfunction Component() {\n  return (\n    <>\n      <Button\n        size=\"md\"\n        href=\"https://www.google.com\"\n        target=\"_blank\"\n        rel=\"nofollow\"\n      >\n        Button href\n      </Button>\n    </>\n  )\n}\n```\n","data":{"title":"Button","section":"components"},"mdx":{"compiledSource":"var u=Object.defineProperty,s=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var d=(e,n,a)=>n in e?u(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,t=(e,n)=>{for(var a in n||(n={}))o.call(n,a)&&d(e,a,n[a]);if(l)for(var a of l(n))i.call(n,a)&&d(e,a,n[a]);return e},m=(e,n)=>s(e,g(n));var p=(e,n)=>{var a={};for(var r in e)o.call(e,r)&&n.indexOf(r)<0&&(a[r]=e[r]);if(e!=null&&l)for(var r of l(e))n.indexOf(r)<0&&i.call(e,r)&&(a[r]=e[r]);return a};const makeShortcode=e=>function(a){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",t({},a))},Demo=makeShortcode(\"Demo\"),Flexbox=makeShortcode(\"Flexbox\"),Button=makeShortcode(\"Button\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var r=a,{components:e}=r,n=p(r,[\"components\"]);return mdx(MDXLayout,m(t(t({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Button\"),mdx(\"hr\",null),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Props\"}),\"Props\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Examples\"}),\"Examples\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Theme\"}),\"Theme\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Size\"}),\"Size\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Block\"}),\"Block\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Icon\"}),\"Icon\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Loading\"}),\"Loading\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Disabled\"}),\"Disabled\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Round\"}),\"Round\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Click\"}),\"Click\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Href\"}),\"Href\"))))),mdx(\"p\",null,`A flexible component button, with six pre-stablished themes.\nThe button can behave like any button with onClick event, or like an anchor with href and target.`),mdx(\"h2\",null,\"Props\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Default value\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"children\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Children component passed to this container.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"theme\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"primary\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Button's predefined styles. Available options are: \",mdx(\"inlineCode\",{parentName:\"td\"},\"primary\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"secondary\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"tertiary\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"tertiaryWhite\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"ghostPink\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"ghostGrey\"),\" and \",mdx(\"inlineCode\",{parentName:\"td\"},\"ghostWhite\"),\".\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"size\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"md\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Button size. Available options are: \",mdx(\"inlineCode\",{parentName:\"td\"},\"sm\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"md\"),\" and \",mdx(\"inlineCode\",{parentName:\"td\"},\"lg\"),\".\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"block\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"false\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"If true, the button will be displayed in a block.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"disabled\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"false\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"It disables the button functionality and shows it with a different style.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"icon\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Displays an icon on the left side of the button.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"iconRight\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Displays as icon on the right side of the button.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"round\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Property to make the button round when it only has an \",mdx(\"inlineCode\",{parentName:\"td\"},\"iconLeft\"),\" and no \",mdx(\"inlineCode\",{parentName:\"td\"},\"children\"),\".\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"loading\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"false\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The loading state disables the button and displays a spinner inside.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"onClick\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"function\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Callback function that is called when the button is clicked.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"type\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Button's type to use in HTML Forms. Available options are: \",mdx(\"inlineCode\",{parentName:\"td\"},\"button\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"submit\"),\", \",mdx(\"inlineCode\",{parentName:\"td\"},\"reset\"),\".\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"name\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The name of the button, used in HTML forms.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"value\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"any\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The value of the button, used in HTML forms.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"href\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The link that the button will navigate to.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"target\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The link target.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"rel\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Only used if the \",mdx(\"inlineCode\",{parentName:\"td\"},\"href\"),\" attribute is present.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"id\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The id of the button.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"testId\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The data-testid of the button.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"className\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The className of the button.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"style\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"object\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The style of the button.\")))),mdx(\"h2\",null,\"Examples\"),mdx(\"h3\",null,\"Theme\"),mdx(\"p\",null,\"You can choose any of the 7 predefined themes:\"),mdx(Demo,{title:\"Button themes\",background:colors.grey400,mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{style:{margin:spacing.tiny},mdxType:\"Button\"},\"Primary\"),mdx(Button,{theme:\"secondary\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Secondary\"),mdx(Button,{theme:\"tertiary\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Tertiary\"),mdx(Button,{theme:\"tertiaryWhite\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Tertiary White\"),mdx(Button,{theme:\"ghostPink\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Ghost Pink\"),mdx(Button,{theme:\"ghostGrey\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Ghost Grey\"),mdx(Button,{theme:\"ghostWhite\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Ghost White\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use Button themes\nfunction Component() {\n  return (\n    <>\n      {/* \\`primary\\` is the default value. */}\n      <Button>Primary</Button>\n      <Button theme=\"secondary\">Secondary</Button>\n      <Button theme=\"tertiary\">Tertiary</Button>\n      <Button theme=\"tertiaryWhite\">Tertiary White</Button>\n      <Button theme=\"ghostPink\">Ghost Pink</Button>\n      <Button theme=\"ghostGrey\">Ghost Grey</Button>\n      <Button theme=\"ghostWhite\">Ghost White</Button>\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Size\"),mdx(\"p\",null,\"There's 3 available sizes for Buttons:\"),mdx(Demo,{title:\"Button sizes\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{size:\"sm\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Small\"),mdx(Button,{size:\"md\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Medium\"),mdx(Button,{size:\"lg\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Large\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use Button sizes\nfunction Component() {\n  return (\n    <>\n      {/* \\`sm\\` is the default value. */}\n      <Button>Small</Button>\n      <Button size=\"md\">Medium</Button>\n      <Button size=\"lg\">Large</Button>\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Block\"),mdx(Demo,{title:\"Button block\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{size:\"md\",block:!0,mdxType:\"Button\"},\"Block\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use block\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" block>\n        Block\n      </Button>\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Icon\"),mdx(Demo,{title:\"Button with icon\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{iconLeft:\"search\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Icon at left side\"),mdx(Button,{iconRight:\"book\",style:{margin:spacing.tiny},mdxType:\"Button\"},\"Icon at right side\"),mdx(Button,{iconLeft:\"search\",iconRight:\"book\",mdxType:\"Button\"},\"Icon at both sides\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to set an icon\nfunction Component() {\n  return (\n    <>\n      <Button iconLeft=\"search\">Icon at left side</Button>\n      <Button iconRight=\"book\">Icon at right side</Button>\n      <Button iconLeft=\"search\" iconRight=\"book\">\n        Icon at both sides\n      </Button>\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Loading\"),mdx(Demo,{title:\"Button loading\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{size:\"md\",loading:!0,mdxType:\"Button\"},\"Loading\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use loading\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" loading>\n        Loading\n      </Button>\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Disabled\"),mdx(Demo,{title:\"Button disabled\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{size:\"md\",disabled:!0,mdxType:\"Button\"},\"Disabled\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use disabled\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" disabled>\n        Disabled\n      </Button>\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Round\"),mdx(Demo,{title:\"Button round\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{size:\"md\",round:!0,iconLeft:\"search\",round:!0,mdxType:\"Button\"}))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use round\nfunction Component() {\n  return (\n    <>\n      {/* The button can be round only when it has no child and has an iconLeft, round properties. */}\n      <Button size=\"md\" round iconLeft=\"search\" round />\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Click\"),mdx(Demo,{title:\"Button onClick\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{size:\"md\",onClick:()=>alert(\"Button clicked!\"),mdxType:\"Button\"},\"Button\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use onClick\nfunction Component() {\n  return (\n    <>\n      <Button size=\"md\" onClick={() => alert('Button clicked!')}>\n        Button\n      </Button>\n    </>\n  )\n}\n`)),mdx(\"h3\",null,\"Href\"),mdx(\"p\",null,\"The button can recive the href, target, and rel properties of an anchor, to render a link with the styling of a button.\"),mdx(Demo,{title:\"Button href\",mdxType:\"Demo\"},mdx(Flexbox,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",wrap:\"wrap\",mdxType:\"Flexbox\"},mdx(Button,{size:\"md\",href:\"https://www.google.com\",target:\"_blank\",rel:\"nofollow\",mdxType:\"Button\"},\"Button href\"))),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use href, rel and target\nfunction Component() {\n  return (\n    <>\n      <Button\n        size=\"md\"\n        href=\"https://www.google.com\"\n        target=\"_blank\"\n        rel=\"nofollow\"\n      >\n        Button href\n      </Button>\n    </>\n  )\n}\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Button","section":"components"}}}},"__N_SSG":true}