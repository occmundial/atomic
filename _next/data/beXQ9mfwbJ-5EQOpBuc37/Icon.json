{"pageProps":{"docs":[{"slug":"Alert","title":"Alert","section":"components"},{"slug":"Button","title":"Button","section":"components"},{"slug":"Card","title":"Card","section":"components"},{"slug":"Colors","title":"Colors","section":"tokens"},{"slug":"Home","title":"Home","section":"home"},{"slug":"Icon","title":"Icon","section":"components"},{"slug":"Tag","title":"Tag","section":"components"},{"slug":"Text","title":"Text","section":"components"}],"doc":{"filepath":"./src/docs/Icon.mdx","slug":"Icon","content":"\nimport Demo from '@/utils/components/Demo'\nimport Icon from '@/components/Icon'\nimport { colors } from '@/components/tokens'\n\n# Icon\n\n---\n\nComponent to display any of the icons on the library.\n\n- [Props](#Props)\n  - [Icon](#Icon)\n  - [Sizes](#Sizes)\n  - [Color](#Color)\n  - [Click](#Click)\n\n## Props\n\n| Name         | Type       | Default value | Description                                                                                   |\n| ------------ | ---------- | ------------- | --------------------------------------------------------------------------------------------- |\n| `iconName`   | **string** | -             | Name of the icon to render. It must match with any of the icons of the library, atomic-icons. |\n| `size`       | **number** | -             | The size of the icon to render. This applies for height and width.                            |\n| `color`      | **string** | -             | Hex value of a color. By default the icon has the color defined on the library.               |\n| `hoverColor` | **string** | -             | Hex value of a color, renders on hover.                                                       |\n| `transition` | **string** | `'0.3s all'`  | Transition for animations. For example: **'1s all'**                                          |\n| `onClick`    | **func**   | -             | Function to call when icon is clicked.                                                        |\n| `alt`        | **string** | -             | Alt property.                                                                                 |\n| `id`         | **string** | -             | Id property of the icon.                                                                      |\n| `testId`     | **string** | -             | data-testid property of the icon.                                                             |\n| `className`  | **string** | -             | The icon className.                                                                           |\n| `style`      | **object** | -             | Object with direct style properties.                                                          |\n\n## Examples\n\n### Icon\n\nRenders an icon\n\n<Demo title=\"Icon\" background={colors.bgWhite}>\n  <Icon iconName=\"search\" />\n</Demo>\n\n```jsx\n// How to set an icon\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' />\n    </Icon>\n  )\n}\n\n```\n\n### Sizes\n\nIcon with a custom size\n\n<Demo title=\"Icon size\" background={colors.bgWhite}>\n  <Icon iconName=\"search\" size={64} />\n</Demo>\n\n```jsx\n// How use size\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' size={64} />\n    </Icon>\n  )\n}\n```\n\n### Color\n\nIcon color.\nColor for hover can be adjusted as well.\n\n<Demo title=\"Icon color\" background={colors.bgWhite}>\n  <Icon iconName=\"search\" color={colors.prim} hoverColor={colors.sec} />\n</Demo>\n\n```jsx\n// How to use color and hoverColor\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' color={colors.prim} hoverColor={colors.sec} />\n    </Icon>\n  )\n}\n```\n\n### Click\n\nIts possible to pass an onClick function to the icons.\n\n<Demo title=\"Icon onClick\" background={colors.bgWhite}>\n  <Icon\n    iconName=\"search\"\n    color={colors.sec}\n    onClick={() => alert('Icon clicked!')}\n  />\n</Demo>\n\n```jsx\n// How to use onClick\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' color={colors.sec} onClick={() => alert('Icon clicked!')} />\n    </Icon>\n  )\n}\n```\n","data":{"title":"Icon","section":"components"},"mdx":{"compiledSource":"var c=Object.defineProperty,s=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var d=(e,n,a)=>n in e?c(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,t=(e,n)=>{for(var a in n||(n={}))l.call(n,a)&&d(e,a,n[a]);if(o)for(var a of o(n))i.call(n,a)&&d(e,a,n[a]);return e},p=(e,n)=>s(e,N(n));var m=(e,n)=>{var a={};for(var r in e)l.call(e,r)&&n.indexOf(r)<0&&(a[r]=e[r]);if(e!=null&&o)for(var r of o(e))n.indexOf(r)<0&&i.call(e,r)&&(a[r]=e[r]);return a};const makeShortcode=e=>function(a){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",t({},a))},Demo=makeShortcode(\"Demo\"),Icon=makeShortcode(\"Icon\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var r=a,{components:e}=r,n=m(r,[\"components\"]);return mdx(MDXLayout,p(t(t({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Icon\"),mdx(\"hr\",null),mdx(\"p\",null,\"Component to display any of the icons on the library.\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Props\"}),\"Props\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Icon\"}),\"Icon\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Sizes\"}),\"Sizes\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Color\"}),\"Color\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",t({parentName:\"li\"},{href:\"#Click\"}),\"Click\"))))),mdx(\"h2\",null,\"Props\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Default value\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"iconName\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Name of the icon to render. It must match with any of the icons of the library, atomic-icons.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"size\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"number\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The size of the icon to render. This applies for height and width.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"color\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Hex value of a color. By default the icon has the color defined on the library.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"hoverColor\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Hex value of a color, renders on hover.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"transition\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"'0.3s all'\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Transition for animations. For example: \",mdx(\"strong\",{parentName:\"td\"},\"'1s all'\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"onClick\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"func\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Function to call when icon is clicked.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"alt\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Alt property.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"id\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Id property of the icon.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"testId\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"data-testid property of the icon.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"className\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"The icon className.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"style\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"object\")),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"Object with direct style properties.\")))),mdx(\"h2\",null,\"Examples\"),mdx(\"h3\",null,\"Icon\"),mdx(\"p\",null,\"Renders an icon\"),mdx(Demo,{title:\"Icon\",background:colors.bgWhite,mdxType:\"Demo\"},mdx(Icon,{iconName:\"search\",mdxType:\"Icon\"})),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to set an icon\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' />\n    </Icon>\n  )\n}\n\n`)),mdx(\"h3\",null,\"Sizes\"),mdx(\"p\",null,\"Icon with a custom size\"),mdx(Demo,{title:\"Icon size\",background:colors.bgWhite,mdxType:\"Demo\"},mdx(Icon,{iconName:\"search\",size:64,mdxType:\"Icon\"})),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How use size\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' size={64} />\n    </Icon>\n  )\n}\n`)),mdx(\"h3\",null,\"Color\"),mdx(\"p\",null,`Icon color.\nColor for hover can be adjusted as well.`),mdx(Demo,{title:\"Icon color\",background:colors.bgWhite,mdxType:\"Demo\"},mdx(Icon,{iconName:\"search\",color:colors.prim,hoverColor:colors.sec,mdxType:\"Icon\"})),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use color and hoverColor\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' color={colors.prim} hoverColor={colors.sec} />\n    </Icon>\n  )\n}\n`)),mdx(\"h3\",null,\"Click\"),mdx(\"p\",null,\"Its possible to pass an onClick function to the icons.\"),mdx(Demo,{title:\"Icon onClick\",background:colors.bgWhite,mdxType:\"Demo\"},mdx(Icon,{iconName:\"search\",color:colors.sec,onClick:()=>alert(\"Icon clicked!\"),mdxType:\"Icon\"})),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-jsx\"}),`// How to use onClick\nfunction Component() {\n  return (\n    <>\n      <Icon iconName='search' color={colors.sec} onClick={() => alert('Icon clicked!')} />\n    </Icon>\n  )\n}\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Icon","section":"components"}}}},"__N_SSG":true}